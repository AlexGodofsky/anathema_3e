def exclude = ['Anathema']
project.subprojects.each {
    if (exclude.contains(it.name)) {
        return;
    }
    def project = it.name
    task "build${project}Plugin"(type: Copy) {
        it.dependsOn(":$project:assemble")
        it.from "$project/build/libs/${project}.jar"
        it.into new File(buildDir, "plugins")
    }
}

/*task copyAnathemaModules() << {
    project.subprojects.each {
        copy {
            from "$it/build/libs/${it}.jar"
            into new File(buildDir, "plugins")
        }
    }
}        */

task copyExternalDependencies << {
    Set applicationDependencies = [];
    subprojects.each { project ->
        def moduleDependencies = project.configurations.compile.findAll { File dependency ->
            def isNotJavaFx =!dependency.absolutePath.contains('jfxrt.jar')
            def isExternal = dependency.absolutePath.contains('cache')
            return isExternal && isNotJavaFx
        }
        applicationDependencies.addAll moduleDependencies
    }
    copy {
        from applicationDependencies
        into dependenciesDir
    }
}