archivesBaseName= 'anathema'

task(run, dependsOn: compileJava, type: JavaExec) {
  main = "net.sf.anathema.AnathemaBootLoader"
  classpath = sourceSets.main.runtimeClasspath
}

jar {
  manifest {
    attributes(
      'Built-By': System.getProperty("user.name"),
      'Main-Class': 'net.sf.anathema.AnathemaBootLoader',
      'SplashScreen-Image': 'icons/core/AnathemaSplashNew.png'
    )
  }
}

dependencies {
  //For development, all projects need to be on the classpath at runtime.
  project.parent.subprojects.each {
      if (isNotSelf(it)){
        runtime project(":${it.name}")
      }
  }
}

private boolean isNotSelf(project) {
    return project.name != "Anathema"
}

sourceSets.main.java.setSrcDirs(['src/main/java'])
sourceSets.main.resources.setSrcDirs(['src/main/resources'])
sourceSets.test.java.setSrcDirs(['src/test/java'])
sourceSets.test.resources.setSrcDirs(['src/test/resources'])